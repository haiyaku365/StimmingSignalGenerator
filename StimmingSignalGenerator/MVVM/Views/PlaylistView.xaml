<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             
             xmlns:vm="clr-namespace:StimmingSignalGenerator.MVVM.ViewModels;assembly=StimmingSignalGenerator"
             xmlns:v="clr-namespace:StimmingSignalGenerator.MVVM.Views;assembly=StimmingSignalGenerator"
             
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             d:DataContext="{x:Static vm:DesignPlaylistViewModel.Data}"
             
             x:Class="StimmingSignalGenerator.MVVM.Views.PlaylistView">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto"/>
      <RowDefinition />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="auto" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <v:ControlSliderView Grid.Column="1" Grid.Row="0"
                         VerticalAlignment="Top" Margin="5"
                         ToolTip.Tip="Master volume"
                         DataContext="{Binding MasterVolVM}"/>
    <DockPanel Grid.Column="0" Grid.RowSpan="2" Margin="0 0 2 0">
      <Button DockPanel.Dock="Bottom" Classes="Green" Height="30"
              Content="+Track" Command="{Binding AddNewTrack}" >
        <Button.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Add from clipboard" Classes="Paste"
                      Command="{Binding AddTrackFromClipboard}" />
          </ContextMenu>
        </Button.ContextMenu>
      </Button>

      <!-- Tools -->
      <TextBlock DockPanel.Dock="Top" Text="{Binding Name}" Margin="3 5"/>
      <StackPanel DockPanel.Dock="Top" Margin="0 0 0 5" Spacing="5" Orientation="Horizontal">
        <StackPanel Spacing="5" Orientation="Horizontal">
          <StackPanel.ContextMenu>
            <ContextMenu>
              <MenuItem Header="Copy as compressed text" Classes="Copy"
                        Command="{Binding CopyAsCompressedText}"/>
            </ContextMenu>
          </StackPanel.ContextMenu>
          <Button Content="Save as..." Command="{Binding SaveAsAsync}"
                  HotKey="Ctrl+Shift+S" ToolTip.Tip="Hotkey:Ctrl+Shift+S"/>
          <Button Content="Save" Command="{Binding SaveCommand}"
                  HotKey="Ctrl+S" ToolTip.Tip="Hotkey:Ctrl+S"/>
        </StackPanel>
        <Button Content="Load" Command="{Binding LoadAsync}" >
          <Button.ContextMenu>
            <ContextMenu>
              <MenuItem Header="Paste compressed text" Classes="Paste"
                        Command="{Binding PasteCompressedText}"/>
            </ContextMenu>
          </Button.ContextMenu>
        </Button>
      </StackPanel>
      <StackPanel DockPanel.Dock="Top" Margin="0 0 0 3" Orientation="Horizontal" Spacing="5">
        <ToggleButton Content="Note" IsChecked="{Binding IsNoteMode}"/>
        <ToggleButton Content="Timing mode" IsChecked="{Binding IsTimingMode}" />
      </StackPanel>
      <StackPanel DockPanel.Dock="Top" Margin="0 0 0 3" Orientation="Horizontal" Spacing="5" 
                  IsVisible="{Binding IsTimingMode}">
        <ToggleButton Content="Shuffle" IsChecked="{Binding IsShuffleMode}" />
        <NumericUpDown ToolTip.Tip="Crossfade durations(Second)"
                       Value="{Binding CrossfadeDuration}"
                       Minimum="0" Maximum="30" Increment="0.1" FormatString="{}{0:N1}" />
      </StackPanel>
      <!-- HotKey for play track-->
      <Panel IsVisible="False">
        <!-- Issue CommandParameter not passing when using Hotkey https://github.com/AvaloniaUI/Avalonia/issues/2446 -->
        <!--<Button IsVisible="False" HotKey="Ctrl+D1" Command="{Binding SwitchPlayingTrackByIndex}" CommandParameter="0" />-->
        <Button HotKey="Ctrl+D1" Command="{Binding SwitchPlayingTrackByIndex0}" />
        <Button HotKey="Ctrl+D2" Command="{Binding SwitchPlayingTrackByIndex1}" />
        <Button HotKey="Ctrl+D3" Command="{Binding SwitchPlayingTrackByIndex2}" />
        <Button HotKey="Ctrl+D4" Command="{Binding SwitchPlayingTrackByIndex3}" />
        <Button HotKey="Ctrl+D5" Command="{Binding SwitchPlayingTrackByIndex4}" />
        <Button HotKey="Ctrl+D6" Command="{Binding SwitchPlayingTrackByIndex5}" />
        <Button HotKey="Ctrl+D7" Command="{Binding SwitchPlayingTrackByIndex6}" />
        <Button HotKey="Ctrl+D8" Command="{Binding SwitchPlayingTrackByIndex7}" />
        <Button HotKey="Ctrl+D9" Command="{Binding SwitchPlayingTrackByIndex8}" />
        <Button HotKey="Ctrl+D0" Command="{Binding SwitchPlayingTrackByIndex9}" />
      </Panel>

      <!-- Track List -->
      <ListBox DockPanel.Dock="Top" Margin="0 2" Name="TrackList"
               Items="{ Binding TrackVMs }" SelectedItem="{Binding SelectedTrackVM}"
               SelectionMode="Single" >
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border BorderBrush="Gray" Background="Transparent"
                    BorderThickness="1" Margin="-2 -1 -2 0" DragDrop.AllowDrop="True">
              <Border.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="Copy to clipboard" Classes="Copy"
                            Command="{Binding CopyToClipboard}" />
                  <MenuItem Header="Force Switch" IsVisible="{Binding $parent[UserControl].DataContext.IsTimingMode}"
                            Command="{Binding $parent[UserControl].DataContext.SwitchPlayingTrack}"
                            CommandParameter="{Binding }" />
                </ContextMenu>
              </Border.ContextMenu>

              <DockPanel>
                <ProgressBar DockPanel.Dock="Bottom"
                             Height="2" MinHeight="0" MinWidth="0"
                             Value="{Binding Progress}" Minimum="0" Maximum="1"/>
                <Panel DockPanel.Dock="Left" Width="15">
                  <TextBlock IsVisible="{Binding IsPlaying}"
                             Margin="0 0 5 0" VerticalAlignment="Center"
                             Text=">"/>
                </Panel>
                <TextBlock DockPanel.Dock="Left"
                           Margin="0 0 5 0" VerticalAlignment="Center"
                           Text="{Binding Name}"/>

                <Button DockPanel.Dock="Right" Classes="Red Remove"
                        Margin="2 0"
                        Command="{Binding $parent[UserControl].DataContext.RemoveTrack}"
                        CommandParameter="{Binding }" />
                <NumericUpDown DockPanel.Dock="Right" IsVisible="{Binding $parent[UserControl].DataContext.IsTimingMode}"
                               ToolTip.Tip="Duration (second)"
                               Increment="0.1" Minimum="0" Maximum="7200" AllowSpin="True"
                               Value="{Binding TimeSpanSecond}" FormatString="{}{0:N1}"/>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                        IsVisible="{Binding !$parent[UserControl].DataContext.IsTimingMode}"
                        Background="Transparent" BorderThickness="0"
                        Command="{Binding $parent[UserControl].DataContext.SwitchPlayingTrack}"
                        CommandParameter="{Binding }"
                        ToolTip.Tip="Play track (Hotkey: Ctrl+1 to Ctrl+0)">
                  <Button.Content>
                    <Viewbox Height="24">
                      <Image Source="/Assets/Icons/play.png" />
                    </Viewbox>
                  </Button.Content>
                </Button>
              </DockPanel>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </DockPanel>
    <!-- Note -->
    <DockPanel Grid.Column="1" Grid.Row="1" IsVisible="{Binding IsNoteMode}">
      <TextBlock DockPanel.Dock="Top" Text="Note:" ToolTip.Tip="Note something to save along with playlist."/>
      <TextBox DockPanel.Dock="Top"
               FontSize="18" Background="#fef1dc"
               Text="{Binding Note}"
               AcceptsTab="True" AcceptsReturn="True" />
    </DockPanel>
    <!-- Track -->
    <ToggleButton Grid.Column="1" Grid.Row="1" Margin="3"
                  HorizontalAlignment="Right" VerticalAlignment="Top"
                  Content="Hide empty modulation" IsVisible="{Binding !IsNoteMode}"
                  IsChecked="{Binding AppState.IsHideZeroModulation}" />
    <ItemsControl Grid.Column="1" Grid.Row="1"
                  IsVisible="{Binding !IsNoteMode}"
                  Items="{Binding TrackVMs}" >
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Border BorderThickness="1" BorderBrush="LightGray" CornerRadius="2"
                  IsVisible="{Binding IsSelected}">
            <v:TrackView Height="{Binding $parent[ItemsControl].Bounds.Height}"
                         DataContext="{Binding }" />
          </Border>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </Grid>
</UserControl>
